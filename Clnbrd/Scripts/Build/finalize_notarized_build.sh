#!/bin/bash

# Clnbrd Post-Notarization Finalization Script
# Staples notarization ticket, creates DMG, generates JSON, and prepares GitHub release

set -e

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m'

# Check for build number argument
if [ -z "$1" ]; then
    echo -e "${RED}‚ùå Error: Build number required${NC}"
    echo "Usage: $0 <BUILD_NUMBER>"
    echo "Example: $0 33"
    exit 1
fi

BUILD_NUMBER=$1
BUILD_DIR="./Distribution"
ZIP_FILE="${BUILD_DIR}/Upload/Clnbrd-Build${BUILD_NUMBER}.zip"

# Get version from Info.plist
VERSION=$(plutil -extract CFBundleShortVersionString raw Clnbrd/Info.plist)

echo -e "${CYAN}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
echo -e "${CYAN}‚ïë           Finalizing Notarized Build ${BUILD_NUMBER}                   ‚ïë${NC}"
echo -e "${CYAN}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
echo ""

# Check if ZIP exists
if [ ! -f "${ZIP_FILE}" ]; then
    echo -e "${RED}‚ùå Error: ${ZIP_FILE} not found!${NC}"
    exit 1
fi

# Extract and staple
echo -e "${YELLOW}üì¶ Extracting notarized app...${NC}"
rm -rf "${BUILD_DIR}/Notarized"
mkdir -p "${BUILD_DIR}/Notarized"
cd "${BUILD_DIR}/Notarized"
ditto -xk "../Upload/Clnbrd-Build${BUILD_NUMBER}.zip" .
cd ../..

echo -e "${YELLOW}‚úèÔ∏è  Stapling notarization ticket...${NC}"
xcrun stapler staple "${BUILD_DIR}/Notarized/Clnbrd.app"
xcrun stapler validate "${BUILD_DIR}/Notarized/Clnbrd.app"
echo -e "${GREEN}‚úÖ Notarization ticket stapled!${NC}"

# Verify with Gatekeeper
echo -e "${YELLOW}üîç Verifying with Gatekeeper...${NC}"
spctl -a -vv "${BUILD_DIR}/Notarized/Clnbrd.app"
echo -e "${GREEN}‚úÖ Gatekeeper approved!${NC}"

# Create notarized ZIP
echo -e "${YELLOW}üì¶ Creating final notarized ZIP...${NC}"
cd "${BUILD_DIR}"
ditto -c -k --keepParent Notarized/Clnbrd.app "Upload/Clnbrd-Build${BUILD_NUMBER}-Notarized.zip"
cd ..
ZIP_SIZE=$(du -h "${BUILD_DIR}/Upload/Clnbrd-Build${BUILD_NUMBER}-Notarized.zip" | cut -f1)
echo -e "${GREEN}‚úÖ Notarized ZIP: ${ZIP_SIZE}${NC}"

# Create professional DMG
echo -e "${YELLOW}üíø Creating professional DMG installer...${NC}"
mkdir -p "${BUILD_DIR}/dmg_temp"
cp -R "${BUILD_DIR}/Notarized/Clnbrd.app" "${BUILD_DIR}/dmg_temp/"
ln -s /Applications "${BUILD_DIR}/dmg_temp/Applications"

cat > "${BUILD_DIR}/dmg_temp/INSTALL.txt" << 'EOF'
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                    Clnbrd Installation                       ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

‚úÖ FULLY NOTARIZED BY APPLE - No security warnings!

üì¶ INSTALLATION INSTRUCTIONS
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

1. Drag Clnbrd.app to the Applications folder
2. Open Clnbrd from your Applications folder or Spotlight
3. Grant Accessibility permissions when prompted
4. Start using the ‚åò‚å•V hotkey to paste clean text!

üéØ QUICK START
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

‚Ä¢ Copy any text with formatting
‚Ä¢ Press ‚åò‚å•V to paste it clean
‚Ä¢ Or enable Auto-clean in settings (‚öôÔ∏è menu bar icon)

üîê PERMISSIONS REQUIRED
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

Clnbrd needs two permissions to work:

‚úì Accessibility Access - To detect the ‚åò‚å•V hotkey
‚úì Input Monitoring - To paste cleaned text

Grant these in System Settings ‚Üí Privacy & Security

üîó SUPPORT & FEEDBACK
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

‚Ä¢ GitHub: https://github.com/oliveoi1/Clnbrd
‚Ä¢ Email: olivedesignstudios@gmail.com
‚Ä¢ Issues: https://github.com/oliveoi1/Clnbrd/issues

Made with ‚ù§Ô∏è for macOS by Allan Alomes
EOF

hdiutil create -volname "Clnbrd ${VERSION}" \
    -srcfolder "${BUILD_DIR}/dmg_temp" \
    -ov -format UDZO \
    -imagekey zlib-level=9 \
    "${BUILD_DIR}/DMG/Clnbrd-${VERSION}-Build-${BUILD_NUMBER}-Notarized.dmg"

rm -rf "${BUILD_DIR}/dmg_temp"
DMG_SIZE=$(du -h "${BUILD_DIR}/DMG/Clnbrd-${VERSION}-Build-${BUILD_NUMBER}-Notarized.dmg" | cut -f1)
echo -e "${GREEN}‚úÖ Professional DMG created: ${DMG_SIZE}${NC}"

# Generate version JSON for auto-updates
echo -e "${YELLOW}üìù Generating version JSON...${NC}"
RELEASE_DATE=$(date +"%Y-%m-%d")

cat > "${BUILD_DIR}/Upload/clnbrd-version.json" <<EOF
{
  "version": "${VERSION}",
  "build": "${BUILD_NUMBER}",
  "dmg_filename": "Clnbrd-${VERSION}-Build-${BUILD_NUMBER}-Notarized.dmg",
  "download_url": "https://github.com/oliveoi1/Clnbrd/releases/latest/download/Clnbrd-${VERSION}-Build-${BUILD_NUMBER}-Notarized.dmg",
  "release_notes": "‚Ä¢ ‚úÖ Fully Notarized by Apple - No security warnings!\\n‚Ä¢ üîê Code Signed with Developer ID - Verified and secure\\n‚Ä¢ üéØ ‚åò‚å•V Hotkey - Paste cleaned text instantly\\n‚Ä¢ ü§ñ Auto-clean on Copy - Automatically strip formatting\\n‚Ä¢ üìã Menu Bar Integration - Quick access from your Mac\\n‚Ä¢ üßπ Format Removal - Strips all formatting, styles, and metadata\\n‚Ä¢ üöÄ Performance Monitoring - Built-in memory and CPU optimization\\n‚Ä¢ üîÑ Error Recovery - Automatic recovery from clipboard issues\\n‚Ä¢ üìä Privacy-focused Analytics - Track usage patterns\\n‚Ä¢ ‚ö° Auto-updates - Seamless future updates",
  "release_date": "${RELEASE_DATE}",
  "minimum_os_version": "15.5"
}
EOF

echo -e "${GREEN}‚úÖ Version JSON created!${NC}"

# Create GitHub release instructions
cat > "${BUILD_DIR}/GITHUB_RELEASE_INSTRUCTIONS.txt" <<EOF
GitHub Release Instructions for Build ${BUILD_NUMBER}
=====================================================

Files to Upload:
1. DMG: Distribution/DMG/Clnbrd-${VERSION}-Build-${BUILD_NUMBER}-Notarized.dmg
2. ZIP: Distribution/Upload/Clnbrd-Build${BUILD_NUMBER}-Notarized.zip
3. JSON: Distribution/Upload/clnbrd-version.json

Command to create release:
--------------------------
cd /Users/allanalomes/Documents/AlsApp/Clnbrd

gh release create v${VERSION}-build${BUILD_NUMBER} \\
  --title "v${VERSION} (Build ${BUILD_NUMBER}) - ‚úÖ Fully Notarized by Apple" \\
  --notes "Release notes here..." \\
  --latest \\
  Clnbrd/Distribution/DMG/Clnbrd-${VERSION}-Build-${BUILD_NUMBER}-Notarized.dmg \\
  Clnbrd/Distribution/Upload/Clnbrd-Build${BUILD_NUMBER}-Notarized.zip \\
  Clnbrd/Distribution/Upload/clnbrd-version.json

Or to update existing release:
------------------------------
gh release upload v${VERSION}-build${BUILD_NUMBER} \\
  Clnbrd/Distribution/DMG/Clnbrd-${VERSION}-Build-${BUILD_NUMBER}-Notarized.dmg \\
  Clnbrd/Distribution/Upload/Clnbrd-Build${BUILD_NUMBER}-Notarized.zip \\
  Clnbrd/Distribution/Upload/clnbrd-version.json \\
  --clobber
EOF

# Final summary
echo ""
echo -e "${GREEN}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
echo -e "${GREEN}‚ïë              üéâ FINALIZATION COMPLETE! üéâ                   ‚ïë${NC}"
echo -e "${GREEN}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
echo ""
echo -e "${CYAN}üì¶ Version: ${VERSION} (Build ${BUILD_NUMBER})${NC}"
echo ""
echo -e "${YELLOW}Distribution Files Created:${NC}"
echo -e "  ‚Ä¢ DMG: ${DMG_SIZE} - ${BUILD_DIR}/DMG/Clnbrd-${VERSION}-Build-${BUILD_NUMBER}-Notarized.dmg"
echo -e "  ‚Ä¢ ZIP: ${ZIP_SIZE} - ${BUILD_DIR}/Upload/Clnbrd-Build${BUILD_NUMBER}-Notarized.zip"
echo -e "  ‚Ä¢ JSON: ${BUILD_DIR}/Upload/clnbrd-version.json"
echo ""
echo -e "${YELLOW}Next Step:${NC}"
echo -e "  üì§ Upload to GitHub using instructions in:"
echo -e "     ${BUILD_DIR}/GITHUB_RELEASE_INSTRUCTIONS.txt"
echo ""

